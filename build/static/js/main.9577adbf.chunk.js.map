{"version":3,"sources":["components/Editor.jsx","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","useState","html","setHtml","css","setcss","js","setjs","srcDoc","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA+BeA,EAvBA,SAACC,GACd,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAMtC,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,gBAAgBH,GAC/B,kBAAC,aAAD,CAAkBI,eAPD,SAACC,EAAQC,EAAML,GAClCC,EAASD,IAMyCA,MAAOA,EAAOE,UAAU,sBACtEI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMX,EACNY,MAAO,WACPC,aAAa,OCORC,MA5Bf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAoBJ,mBAAS,IAA7B,mBAAOK,EAAP,KAAWC,EAAX,KAEMC,EAAM,2CAEIN,EAFJ,qCAGKE,EAHL,uCAIME,EAJN,yCAQZ,OACE,oCACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAQJ,SAAS,MAAMC,YAAY,OAAOC,MAAOc,EAAMb,SAAUc,IACjE,kBAAC,EAAD,CAAQjB,SAAS,MAAMC,YAAY,MAAMC,MAAOgB,EAAKf,SAAUgB,IAC/D,kBAAC,EAAD,CAAQnB,SAAS,aAAaC,YAAY,aAAaC,MAAOkB,EAAIjB,SAAUkB,KAG9E,yBAAKjB,UAAU,QACb,4BAAQkB,OAAQA,EAAQC,MAAM,SAASC,QAAQ,gBAAgBC,YAAY,IAAIC,MAAM,OAAOC,OAAO,YCpB3GC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9577adbf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\n\nconst Editor = (props) => {\n  const { language, displayName, value, onChange } = props;\n\n  const handleChange = (editor, data, value) => {\n    onChange(value);\n  };\n\n  return ( \n    <div className=\"editor-container\">\n      <div className=\"editor-title\">{displayName}</div>\n      <ControlledEditor onBeforeChange={handleChange} value={value} className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"material\",\n          lineNumbers: true,\n        }}\n      />\n    </div>\n   );\n}\n\nexport default Editor;\n","import React, { useState } from \"react\";\nimport Editor from \"./components/Editor\";\n\nfunction App() {\n  const [html, setHtml] = useState(\"\");\n  const [css, setcss] = useState(\"\");\n  const [js, setjs] = useState(\"\");\n\n  const srcDoc = `\n       <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n        `;\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml} />\n        <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setcss} />\n        <Editor language=\"javascript\" displayName=\"JavaScript\" value={js} onChange={setjs} />\n      </div>\n\n      <div className=\"pane\">\n        <iframe srcDoc={srcDoc} title=\"output\" sandbox=\"allow-scripts\" frameBorder=\"0\" width=\"100%\" height=\"100%\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}